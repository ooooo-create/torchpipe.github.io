"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7731],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),c=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(u.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),s=c(n),m=r,b=s["".concat(u,".").concat(m)]||s[m]||d[m]||l;return n?a.createElement(b,o(o({ref:t},p),{},{components:n})):a.createElement(b,o({ref:t},p))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[s]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),r=n(6010);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,o),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>v});var a=n(7462),r=n(7294),l=n(6010),o=n(2466),i=n(6775),u=n(1980),c=n(7392),p=n(12);function s(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??s(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function b(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,u._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function k(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,l=d(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[u,c]=b({queryString:n,groupId:a}),[s,k]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,l]=(0,p.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:a}),f=(()=>{const e=u??s;return m({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{f&&i(f)}),[f]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),c(e),k(e)}),[c,k,l]),tabValues:l}}var f=n(2389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(e){let{className:t,block:n,selectedValue:i,selectValue:u,tabValues:c}=e;const p=[],{blockElementScrollPositionUntilNextRender:s}=(0,o.o5)(),d=e=>{const t=e.currentTarget,n=p.indexOf(t),a=c[n].value;a!==i&&(s(t),u(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>p.push(e),onKeyDown:m,onClick:d},o,{className:(0,l.Z)("tabs__item",g.tabItem,o?.className,{"tabs__item--active":i===t})}),n??t)})))}function y(e){let{lazy:t,children:n,selectedValue:a}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=k(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",g.tabList)},r.createElement(h,(0,a.Z)({},e,t)),r.createElement(y,(0,a.Z)({},e,t)))}function v(e){const t=(0,f.Z)();return r.createElement(N,(0,a.Z)({key:String(t)},e))}},1052:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>u,default:()=>b,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var a=n(7462),r=(n(7294),n(3905)),l=n(4866),o=n(5162);const i={id:"computational_backend",title:"\u8ba1\u7b97\u540e\u7aef",type:"explainer"},u="\u8ba1\u7b97\u540e\u7aef",c={unversionedId:"Intra-node/computational_backend",id:"Intra-node/computational_backend",title:"\u8ba1\u7b97\u540e\u7aef",description:"\u5728\u6df1\u5ea6\u5b66\u4e60\u7684\u670d\u52a1\u4e2d\uff0c\u5982\u679c\u4ec5\u652f\u6301\u6a21\u578b\u52a0\u901f\u8fdc\u8fdc\u4e0d\u591f\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5185\u7f6e\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u7ec6\u7c92\u5ea6\u540e\u7aef\u3002",source:"@site/docs/Intra-node/computational_backend.mdx",sourceDirName:"Intra-node",slug:"/Intra-node/computational_backend",permalink:"/docs/Intra-node/computational_backend",draft:!1,editUrl:"https://g.hz.netease.com/deploy/torchpipe-docs/-/tree/master/website/docs/Intra-node/computational_backend.mdx",tags:[],version:"current",lastUpdatedBy:"zhangshiyang",lastUpdatedAt:1691482040,formattedLastUpdatedAt:"Aug 8, 2023",frontMatter:{id:"computational_backend",title:"\u8ba1\u7b97\u540e\u7aef",type:"explainer"},sidebar:"main",previous:{title:"resnet18 \u8ba1\u7b97\u52a0\u901f",permalink:"/docs/Intra-node/model_parallel"},next:{title:"Sequential",permalink:"/docs/Intra-node/Sequential"}},p={},s=[{value:"\u5185\u7f6e\u540e\u7aef",id:"\u5185\u7f6e\u540e\u7aef",level:2},{value:"\u5c0f\u7ed3",id:"\u5c0f\u7ed3",level:2}],d={toc:s},m="wrapper";function b(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u8ba1\u7b97\u540e\u7aef"},"\u8ba1\u7b97\u540e\u7aef"),(0,r.kt)("p",null,"\u5728\u6df1\u5ea6\u5b66\u4e60\u7684\u670d\u52a1\u4e2d\uff0c\u5982\u679c\u4ec5\u652f\u6301\u6a21\u578b\u52a0\u901f\u8fdc\u8fdc\u4e0d\u591f\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5185\u7f6e\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u7ec6\u7c92\u5ea6\u540e\u7aef\u3002"),(0,r.kt)("h2",{id:"\u5185\u7f6e\u540e\u7aef"},"\u5185\u7f6e\u540e\u7aef"),(0,r.kt)(l.Z,{groupId:"cv-torch",className:"unique-tabs",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"python",label:"opencv\u76f8\u5173\u56fe\u50cf\u5904\u7406",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u540d\u79f0"),(0,r.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../backend-reference/opencv#decodemat"},"DecodeMat")),(0,r.kt)("td",{parentName:"tr",align:null},"jpg\u89e3\u7801")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../backend-reference/opencv#cvtcolormat"},"cvtColorMat")),(0,r.kt)("td",{parentName:"tr",align:null},"\u989c\u8272\u7a7a\u95f4\u8f6c\u6362")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../backend-reference/opencv#resizemat"},"ResizeMat")),(0,r.kt)("td",{parentName:"tr",align:null},"resize")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../backend-reference/opencv#pillowresizemat"},"PillowResizeMat")),(0,r.kt)("td",{parentName:"tr",align:null},"\u4e25\u683c\u4fdd\u6301\u548cpillow\u7684\u7ed3\u679c\u4e00\u81f4\u7684resize")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/backend-reference/opencv"},"\u66f4\u591a...")),(0,r.kt)("td",{parentName:"tr",align:null}))))),(0,r.kt)(o.Z,{value:"torch",label:"pytorch\u76f8\u5173\u540e\u7aef",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u540d\u79f0"),(0,r.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../backend-reference/torch#decodetensor"},"DecodeTensor")),(0,r.kt)("td",{parentName:"tr",align:null},"GPU\u4e0ajpg\u89e3\u7801")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../backend-reference/torch#cvtcolortensor"},"cvtColorTensor")),(0,r.kt)("td",{parentName:"tr",align:null},"\u989c\u8272\u7a7a\u95f4\u8f6c\u6362")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../backend-reference/torch#resizetensor"},"ResizeTensor")),(0,r.kt)("td",{parentName:"tr",align:null},"resize")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../backend-reference/torch#pillowresizetensor"},"PillowResizeTensor")),(0,r.kt)("td",{parentName:"tr",align:null},"\u4e25\u683c\u4fdd\u6301\u548cpillow\u7684\u7ed3\u679c\u4e00\u81f4\u7684resize")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/backend-reference/torch"},"\u66f4\u591a...")),(0,r.kt)("td",{parentName:"tr",align:null})))))),(0,r.kt)("p",null,"\u9ed8\u8ba4\u7684\u540e\u7aef\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"Identity"),":"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u540d\u79f0"),(0,r.kt)("th",{parentName:"tr",align:null},"\u521d\u59cb\u5316\u53c2\u6570"),(0,r.kt)("th",{parentName:"tr",align:null},"\u8f93\u5165/\u7c7b\u578b"),(0,r.kt)("th",{parentName:"tr",align:null},"\u8f93\u51fa/\u7c7b\u578b"),(0,r.kt)("th",{parentName:"tr",align:null},"\u5907\u6ce8"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../backend-reference/basic#identity"},(0,r.kt)("inlineCode",{parentName:"a"},"Identity"))),(0,r.kt)("td",{parentName:"tr",align:null},"\u65e0"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"data/any")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"result/any")),(0,r.kt)("td",{parentName:"tr",align:null},"\u529f\u80fd\u4e3a\u5c06",(0,r.kt)("inlineCode",{parentName:"td"},"data"),"\u7684\u503c\u8d4b\u7ed9",(0,r.kt)("inlineCode",{parentName:"td"},"result"))))),(0,r.kt)("p",null,"\u4f7f\u7528\u793a\u4f8b\uff1a"),(0,r.kt)(l.Z,{groupId:"language",className:"unique-tabs",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import torchpipe as tp\nimport numpy as np\nconfig = {\n    # \u5355\u8282\u70b9\u8c03\u5ea6\u5668\u53c2\u6570\uff1a \n    "instance_num":2,\n    # \u8ba1\u7b97\u540e\u7aef\uff1a\n    "backend":"DecodeMat",\n}\n\n# \u521d\u59cb\u5316\nmodels = tp.pipe(config)\n\nwith open("../test/assets/norm_jpg/dog.jpg", "rb") as f:\n    data = f.read()\n## \u524d\u5411\ninput = {"data":data}\nmodels(input) # <== \u53ef\u591a\u7ebf\u7a0b\u8c03\u7528\nresult : np.ndarray = input["result"] \nassert(result.shape == (576, 768, 3))\n'))),(0,r.kt)(o.Z,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'#include "Interpreter.hpp"\n#include "opencv2/core.hpp"\n\nint main(void) {\n  std::unordered_map<std::string, std::string> config = {// \u5355\u8282\u70b9\u8c03\u5ea6\u5668\u53c2\u6570\uff1a\n                                                         {"instance_num", "2"},\n                                                         // \u8ba1\u7b97\u540e\u7aef\uff1a\n                                                         {"backend", "DecodeMat"}};\n  // \u521d\u59cb\u5316\n  ipipe::Interpreter model(config);\n\n  // \u51c6\u5907\u6570\u636e\n  auto input = std::make_shared<std::unordered_map<std::string, ipipe::any>>();\n  (*input)[ipipe::TASK_DATA_KEY] = std::string(...);\n\n  // \u524d\u5411\n  model(input);  // <== \u53ef\u591a\u7ebf\u7a0b\u8c03\u7528\n  cv::Mat result = ipipe::any_cast<cv::Mat>(input->at(ipipe::TASK_RESULT_KEY));\n  return 0;\n};\n')))),(0,r.kt)("h2",{id:"\u5c0f\u7ed3"},"\u5c0f\u7ed3"))}b.isMDXComponent=!0}}]);