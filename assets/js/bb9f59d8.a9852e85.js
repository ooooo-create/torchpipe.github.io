"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9253],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=u(n),m=r,y=s["".concat(p,".").concat(m)]||s[m]||d[m]||l;return n?a.createElement(y,i(i({ref:t},c),{},{components:n})):a.createElement(y,i({ref:t},c))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[s]="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294),r=n(6010);const l={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,i),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>N});var a=n(7462),r=n(7294),l=n(6010),i=n(2466),o=n(6775),p=n(1980),u=n(7392),c=n(12);function s(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??s(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function y(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,p._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function k(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,l=d(e),[i,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[p,u]=y({queryString:n,groupId:a}),[s,k]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,l]=(0,c.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:a}),f=(()=>{const e=p??s;return m({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{f&&o(f)}),[f]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),k(e)}),[u,k,l]),tabValues:l}}var f=n(2389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(e){let{className:t,block:n,selectedValue:o,selectValue:p,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:s}=(0,i.o5)(),d=e=>{const t=e.currentTarget,n=c.indexOf(t),a=u[n].value;a!==o&&(s(t),p(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:d},i,{className:(0,l.Z)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":o===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function g(e){const t=k(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",b.tabList)},r.createElement(h,(0,a.Z)({},e,t)),r.createElement(v,(0,a.Z)({},e,t)))}function N(e){const t=(0,f.Z)();return r.createElement(g,(0,a.Z)({key:String(t)},e))}},5297:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));n(4866),n(5162);const l={id:"extensible_backend",title:"\u81ea\u5b9a\u4e49\u540e\u7aef",type:"explainer"},i=void 0,o={unversionedId:"Intra-node/extensible_backend",id:"Intra-node/extensible_backend",title:"\u81ea\u5b9a\u4e49\u540e\u7aef",description:"\u6211\u4eec\u53d1\u73b0\u4e1a\u52a1\u4e2d\u7684\u4e00\u5927\u9ebb\u70e6\u662f\uff0c\u9884\u7f6e\u7684\u540e\u7aef\uff08\u8ba1\u7b97\u540e\u7aef/\u8c03\u5ea6\u540e\u7aef/RPC\u540e\u7aef/\u8de8\u8fdb\u7a0b\u540e\u7aef...\uff09\u65e0\u6cd5\u8986\u76d6\u9700\u6c42\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u540e\u7aef\u7684\u6269\u5c55\u5e76\u975e\u4f7f\u7528\u8005\u7684\u4efb\u52a1\uff0c\u800c\u662f\u5e93\u5f00\u53d1\u8005\u7684\u4efb\u52a1\u3002torchpipe\u79c9\u6301\u7740\u4e0d\u540c\u7684\u601d\u8def\uff0c\u8ba4\u4e3a\u540e\u7aef\u672c\u8eab\u4e5f\u4e0e\u524d\u7aef\u540c\u4e3a\u9762\u5411\u4f7f\u7528\u8005\u7684API. \u4e3a\u6b64\uff0c\u540e\u7aef\u5fc5\u987b\u8bbe\u8ba1\u7684\u8db3\u591f\u7b80\u5355\u3002\u53c2\u7167gstreamer\uff0cffmpeg\u7b49\u6846\u67b6\u7684\u8bbe\u8ba1\uff0c\u9762\u5411\u73b0\u4ee3\u5316\u7684c++\u548cpython\uff0c torchpipe \u5e0c\u671b\u540e\u7aef\uff1a",source:"@site/docs/Intra-node/extensible_backend.mdx",sourceDirName:"Intra-node",slug:"/Intra-node/extensible_backend",permalink:"/docs/Intra-node/extensible_backend",draft:!1,editUrl:"https://g.hz.netease.com/deploy/torchpipe-docs/-/tree/master/website/docs/Intra-node/extensible_backend.mdx",tags:[],version:"current",lastUpdatedBy:"zhangshiyang",lastUpdatedAt:1691479968,formattedLastUpdatedAt:"Aug 8, 2023",frontMatter:{id:"extensible_backend",title:"\u81ea\u5b9a\u4e49\u540e\u7aef",type:"explainer"},sidebar:"main",previous:{title:"Sequential",permalink:"/docs/Intra-node/Sequential"},next:{title:"\u5355\u8282\u70b9\u8c03\u5ea6\u7cfb\u7edf",permalink:"/docs/Intra-node/schedule"}},p={},u=[{value:"\u57fa\u7840\u7c7b\u578b",id:"\u57fa\u7840\u7c7b\u578b",level:2},{value:"any",id:"any",level:3},{value:"dict",id:"dict",level:3},{value:"Backend",id:"backend",level:3},{value:"\u7f16\u8bd1",id:"compile",level:2},{value:"\u4e0epython\u7684\u7ed1\u5b9a",id:"\u4e0epython\u7684\u7ed1\u5b9a",level:2},{value:"\u4ecepython\u7c7b\u578b\u5230any",id:"py2any",level:3},{value:"\u4eceany\u5230python\u7c7b\u578b",id:"\u4eceany\u5230python\u7c7b\u578b",level:3},{value:"\u5c0f\u7ed3",id:"\u5c0f\u7ed3",level:2}],c={toc:u},s="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\u6211\u4eec\u53d1\u73b0\u4e1a\u52a1\u4e2d\u7684\u4e00\u5927\u9ebb\u70e6\u662f\uff0c\u9884\u7f6e\u7684\u540e\u7aef\uff08\u8ba1\u7b97\u540e\u7aef/\u8c03\u5ea6\u540e\u7aef/RPC\u540e\u7aef/\u8de8\u8fdb\u7a0b\u540e\u7aef...\uff09\u65e0\u6cd5\u8986\u76d6\u9700\u6c42\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u540e\u7aef\u7684\u6269\u5c55\u5e76\u975e",(0,r.kt)("inlineCode",{parentName:"p"},"\u4f7f\u7528\u8005"),"\u7684\u4efb\u52a1\uff0c\u800c\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"\u5e93\u5f00\u53d1\u8005"),"\u7684\u4efb\u52a1\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"torchpipe"),"\u79c9\u6301\u7740\u4e0d\u540c\u7684\u601d\u8def\uff0c\u8ba4\u4e3a\u540e\u7aef\u672c\u8eab\u4e5f\u4e0e\u524d\u7aef\u540c\u4e3a\u9762\u5411",(0,r.kt)("inlineCode",{parentName:"p"},"\u4f7f\u7528\u8005"),"\u7684API. \u4e3a\u6b64\uff0c\u540e\u7aef\u5fc5\u987b\u8bbe\u8ba1\u7684\u8db3\u591f\u7b80\u5355\u3002\u53c2\u7167gstreamer\uff0cffmpeg\u7b49\u6846\u67b6\u7684\u8bbe\u8ba1\uff0c\u9762\u5411\u73b0\u4ee3\u5316\u7684c++\u548cpython\uff0c ",(0,r.kt)("inlineCode",{parentName:"p"},"torchpipe")," \u5e0c\u671b\u540e\u7aef\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u8db3\u591f\u7ec6\u7c92\u5ea6"),(0,r.kt)("li",{parentName:"ul"},"\u5bf9\u8f93\u5165\u8f93\u51fa\u6570\u636e\u7c7b\u578b\u4e0d\u505a\u7279\u6b8a\u8981\u6c42\uff0c\u7531\u540e\u7aef\u4f5c\u8005\u8d1f\u8d23\u7c7b\u578b\u7684\u6821\u9a8c\u548c\u7ba1\u7406"),(0,r.kt)("li",{parentName:"ul"},"\u4f5c\u4e3aAPI\uff0c",(0,r.kt)("inlineCode",{parentName:"li"},"\u4f7f\u7528\u8005"),"\u53ea\u9700\u989d\u5916\u5173\u6ce8",(0,r.kt)("strong",{parentName:"li"},"\u57fa\u7840\u7c7b\u578b(dict)"),"\u7684\u4f7f\u7528\u89c4\u5219\uff0c\u4ee5\u53ca",(0,r.kt)("strong",{parentName:"li"},"\u53ef\u9009\u7684\u65e5\u5fd7\u7ec4\u4ef6"),"\u5373\u53ef\uff0c\u5e76\u4e14\u8fd9\u4e24\u8005\u4ea6\u53ef\u91cd\u65b0\u5b9e\u73b0\u800c\u5168\u5c40\u8986\u76d6\u3002\u5bf9\u5176\u4ed6\u4efb\u4f55c++\u8981\u7d20\u4e0d\u505a\u8981\u6c42\u3002\u8fd9\u79cd\u65b9\u5f0f\u867d\u7136\u5bb9\u6613\u5bfc\u81f4\u4ee3\u7801\u7684\u6df7\u4e71\uff0c\u5374\u6781\u5927\u7684\u7ed9\u4e88\u4e86\u4f7f\u7528\u8005\u6269\u5c55\u81ea\u7531\u5ea6\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u5373\u65f6\u7f16\u8bd1\uff0c\u5c24\u5176\u662f\u5728python\u73af\u5883\u5185\u63d0\u4f9b\u7f16\u8bd1\u80fd\u529b")),(0,r.kt)("h2",{id:"\u57fa\u7840\u7c7b\u578b"},"\u57fa\u7840\u7c7b\u578b"),(0,r.kt)("h3",{id:"any"},"any"),(0,r.kt)("p",null,"\u7c7b\u4f3c\u4e8ec++17\u4e2d\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"std::any"),"\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u63a5\u53e3\u51e0\u4e4e\u4e00\u81f4\u7684\u7c7b\u578b\u64e6\u9664\u7684\u5bb9\u5668\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"ipipe::any"),"\uff0c\u53ef\u4ee5\u63a5\u6536\u9664",(0,r.kt)("inlineCode",{parentName:"p"},"char*"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"unsigned char*"),"\u4e4b\u5916\u7684\u4efb\u610f\u7c7b\u578b\u6570\u636e\u3002\nany\u7c7b\u578b\u7684\u6570\u636e\u53ef\u7528any_cast\u83b7\u53d6\u771f\u6b63\u6570\u636e\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"T data = any_cast<T>(any_data);\n// or\nauto* pdata = any_cast<T>(&any_data);\n")),(0,r.kt)("h3",{id:"dict"},"dict"),(0,r.kt)("p",null,"\u4f5c\u4e3a\u6570\u636e\u7684\u8f7d\u4f53\uff0c\u7c7b\u4f3c\u4e8epython\u4e2d\u7684dict\uff0c\u6211\u4eec\u4e5f\u5728c++\u4e2d\u5b9a\u4e49\u4e86\u5982\u4e0bdict:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#ifndef CUSTOM_DICT\nusing dict = std::shared_ptr<std::unordered_map<std::string, ipipe::any>>;\n#else\n// todo :  custom dict with bidirectional binding between C++ and Python\n#endif\n")),(0,r.kt)("h3",{id:"backend"},"Backend"),(0,r.kt)("p",null,"torchpipe\u5c06\u540e\u7aef\u57fa\u7840\u8981\u7d20\u9650\u5236\u4e3a\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u521d\u59cb\u5316\uff1a\u53c2\u6570\u914d\u7f6e"),(0,r.kt)("li",{parentName:"ul"},"\u524d\u5411\uff1a\u8f93\u5165\u8f93\u51fa\u63a5\u53e3"),(0,r.kt)("li",{parentName:"ul"},"\u524d\u5411\uff1a\u6570\u636e\u7684batch\u8303\u56f4")),(0,r.kt)("p",null,"\u540e\u7aef\u63a5\u53e3\u5b9a\u4e49\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Backend {\n public:\n  // \u914d\u7f6e\u4f1a\u5c42\u5c42\u900f\u4f20\u5230`init`\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e2d\n  virtual bool init(const std::unordered_map<std::string, std::string>& config, dict dict_config) {\n    return true;\n  };\n\n  virtual void forward(const std::vector<dict>& input_dicts) = 0;\n\n  virtual uint32_t max() const { return 1; };\n  virtual uint32_t min() const { return 1; };\n  ... //Irrelevant Functions\n};\n")),(0,r.kt)("p",null,"\u60a8\u53ef\u81ea\u5b9a\u4e49\u540e\u7aef\uff0c\u6bd4\u5982\uff0c\u5185\u90e8\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"Identity")," \u53ef\u5728\u5982\u4e0b",(0,r.kt)("inlineCode",{parentName:"p"},"CustomIdentity.cpp"),"\u6587\u4ef6\u88ab\u7b49\u4ef7\u5b9a\u4e49\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'#include "torchpipe/extension.h"\n\nnamespace ipipe {\nclass CustomIdentity : public Backend {\n public:\n  void forward(const std::vector<dict>& input_dicts) override {\n    (*input_dicts[0])[TASK_RESULT_KEY] = input_dicts[0]->at(TASK_DATA_KEY);\n  }\n  uint32_t max() const override final { return 1; }; // or directly inherit from SingleBackend\n};\n\n// \u6ce8\u518c\u5230\u7cfb\u7edf\nIPIPE_REGISTER(Backend, CustomIdentity, "CustomIdentity");\n}  // namespace ipipe\n')),(0,r.kt)("p",null,"\u4e0e ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/triton-inference-server/backend"},"triton inference server"),"\u76f8\u6bd4\uff0c\u8fd9\u91cc\u7684\u540e\u7aef\u8981\u7d20\u8981\u5c11\u5f88\u591a\u3002\u7528\u6237\u4e00\u822c\u53ea\u9700\u6269\u5c55 ",(0,r.kt)("inlineCode",{parentName:"p"},"init/forward")," \u5373\u53ef\u3002\u5982\u679c\u9700\u8981\u5b9e\u73b0batching\u529f\u80fd\uff0c\u5219\u9700\u8981\u66f4\u6539",(0,r.kt)("inlineCode",{parentName:"p"},"max/min"),". \u5728\u6211\u4eec\u7684\u5b9e\u8df5\u4e2d\uff0c\u6ee1\u8db3",(0,r.kt)("a",{parentName:"p",href:"./model_parallel#assumption"},"\u57fa\u672c\u5047\u8bbe"),"\u60c5\u51b5\u4e0b\uff0c\u540e\u7aef\u63d0\u4f9b\u8fd9\u4e9b\u8981\u7d20\u5df2\u7ecf\u8db3\u591f\u3002torchpipe\u901a\u8fc7\u540e\u7aef\u7684\u590d\u5408\u5b9e\u73b0\u4e86\u5168\u90e8\u529f\u80fd\u3002\u4e8b\u5b9e\u4e0a\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"torchpipe"),"\u672c\u8eab\u5c31\u662f\u540e\u7aef\u548c\u540e\u7aef\u7684\u590d\u5408\u3002"),(0,r.kt)("h2",{id:"compile"},"\u7f16\u8bd1"),(0,r.kt)("p",null,"\u4e3a\u4e86\u65b9\u4fbf\u7f16\u8bd1\uff0c\u6211\u4eec\u5f15\u7528",(0,r.kt)("a",{parentName:"p",href:"../python/compile"},(0,r.kt)("inlineCode",{parentName:"a"},"torch.utils.cpp_extension"))," AOT\u7f16\u8bd1\u8bbe\u65bd\uff0c \u4ee5\u4fbf\u5728python\u73af\u5883\u4e2d\u5b8c\u6210\u540e\u7aef\u7684\u5feb\u901f\u81ea\u5b9a\u4e49\u6269\u5c55\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from torchpipe.utils.cpp_extension import load\nfrom torchpipe import pipe\n\n## \u52a0\u8f7dc++\nload(sources=["CustomIdentity.cpp"])\n## \u521d\u59cb\u5316\nmodel = pipe({"backend":"CustomIdentity", "instance_num":"2"})\n\n## \u524d\u5411\ninput = {"data":"123"}\nmodel(input)\n## \u68c0\u67e5\u7ed3\u679c\nassert(input["result"] == b"123")\n')),(0,r.kt)("h2",{id:"\u4e0epython\u7684\u7ed1\u5b9a"},"\u4e0epython\u7684\u7ed1\u5b9a"),(0,r.kt)("p",null,"\u4ee5python\u4e3a\u524d\u7aef\u8bed\u8a00\u65f6\uff0c\u4f1a\u4ecepython\u4e2d\u8c03\u7528\u540e\u7aef\uff0c\u5e76\u4e14\u5c06\u7ed3\u679c\u8fd4\u56de\u5230python\u4e2d\uff0c\u9700\u8981\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002"),(0,r.kt)("h3",{id:"py2any"},"\u4ecepython\u7c7b\u578b\u5230any"),(0,r.kt)("p",null,"\u5047\u8bbe\u8f93\u5165\u6570\u636e\u4e3a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'input = {"data":py_object}\n')),(0,r.kt)("p",null,"\u6846\u67b6\u4ee5",(0,r.kt)("a",{parentName:"p",href:"../cpp-python/basic#py2cpp"},"\u4e00\u5b9a\u89c4\u5219"),"\u628apython\u5bf9\u8c61",(0,r.kt)("inlineCode",{parentName:"p"},"py_object"),"\u8f6c\u6362\u4e3ac++\u5bf9\u8c61;"),(0,r.kt)("p",null,"\u5bf9\u4e8epython\u7aef\u7684dict: ",(0,r.kt)("inlineCode",{parentName:"p"},"input"),"\uff0c \u5230c++\u4e2d\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'dict input_cpp = std::make_shared<std::unordered_map<std::string, ipipe::any>>();\n(*input_cpp)["data"] = PY2CPP(py_object);\n')),(0,r.kt)("p",null,"\u8f6c\u6362\u5b8c\u6210\u540e\u6570\u636e\u4f1a\u4ee5",(0,r.kt)("inlineCode",{parentName:"p"},"dict"),"\u7c7b\u578b\u9001\u5165\u5230",(0,r.kt)("inlineCode",{parentName:"p"},"\u540e\u7aef"),"\u4e2d\u5904\u7406\u3002\u7528\u6237\u53ef\u4ee5\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"\u540e\u7aef"),"\u4e2d\u6307\u5b9a\u6570\u636e\u7c7b\u578b",(0,r.kt)("inlineCode",{parentName:"p"},"T"),"\uff0c\u901a\u8fc7\u4ee5\u4e0bAPI\u83b7\u53d6\u771f\u5b9e\u6570\u636e\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'T data = any_cast<T>((*input_cpp)["data"]);\n// or\nauto* pdata = any_cast<T>(&(*input_cpp)["data"]);\n')),(0,r.kt)("p",null,"\u5982\u679c",(0,r.kt)("inlineCode",{parentName:"p"},"T"),"\u4e0e\u771f\u5b9e\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"c++"),"\u7c7b\u578b\u4e0d\u4e00\u81f4, \u5c06\u629b\u51fa\u5f02\u5e38\u6216\u8005\u8fd4\u56de\u7a7a\u6307\u9488\u3002"),(0,r.kt)("h3",{id:"\u4eceany\u5230python\u7c7b\u578b"},"\u4eceany\u5230python\u7c7b\u578b"),(0,r.kt)("p",null,"\u5f53",(0,r.kt)("inlineCode",{parentName:"p"},"\u540e\u7aef"),"\u5c06\u7ed3\u679c\u5199\u5165",(0,r.kt)("inlineCode",{parentName:"p"},"input_cpp"),"\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"result"),"\u548c\u5176\u4ed6\u952e\u503c\u65f6\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528python\u63a5\u53e3\uff0c\u6846\u67b6\u4f1a\u81ea\u52a8\u5c06\u9664",(0,r.kt)("inlineCode",{parentName:"p"},"data"),"\u4e4b\u5916\u6240\u6709\u952e\u503c\u5bf9\u5e94\u7684\u6570\u636e\u4ee5",(0,r.kt)("a",{parentName:"p",href:"../cpp-python/basic#cpp2py"},"\u4e00\u5b9a\u89c4\u5219"),"\u4f20\u8f93\u5230python\u7aef\uff1a"),(0,r.kt)("h2",{id:"\u5c0f\u7ed3"},"\u5c0f\u7ed3"))}d.isMDXComponent=!0}}]);