"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1454],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>h});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),s=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},m=function(e){var n=s(e.components);return a.createElement(l.Provider,{value:n},e.children)},u="mdxType",x={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),u=s(t),c=r,h=u["".concat(l,".").concat(c)]||u[c]||x[c]||o;return t?a.createElement(h,i(i({ref:n},m),{},{components:t})):a.createElement(h,i({ref:n},m))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=c;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[u]="string"==typeof e?e:r,i[1]=p;for(var s=2;s<o;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},1108:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>x,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var a=t(7462),r=(t(7294),t(3905));const o={id:"onnx",title:"\u5982\u4f55\u5c06\u8f6c\u6362\u6a21\u578b\u5230onnx",type:"explainer"},i=void 0,p={unversionedId:"faq/onnx",id:"faq/onnx",title:"\u5982\u4f55\u5c06\u8f6c\u6362\u6a21\u578b\u5230onnx",description:"\u968f\u7740 NVIDIA \u5c06\u91cd\u5fc3\u8f6c\u79fb\u5230 TorchTensorrt, torch2trt \u5df2\u7ecf\u505c\u6b62\u5927\u89c4\u6a21\u7ef4\u62a4\u3002tensorrt\u5b98\u65b9\u5c06\u5bf9onnx\u7684\u652f\u6301\u63a8\u5230\u4e86\u6700\u9ad8\u7a0b\u5ea6\u3002\u5728\u6211\u4eec\u7684\u6240\u6709\u5df2\u77e5\u5b9e\u8df5\u4e2d\uff0c\u901a\u8fc7\u9759\u6001onnx\u7ec4\u5408, \u52a8\u6001onnx\uff0c\u9884\u751f\u6210tensorrt\u6a21\u578b\u7b49\u9014\u5f84\uff0ctorchpipe\u80fd\u5b8c\u6574\u66ff\u4ee3 torch2trt.",source:"@site/docs/faq/onnx.mdx",sourceDirName:"faq",slug:"/faq/onnx",permalink:"/docs/faq/onnx",draft:!1,editUrl:"https://g.hz.netease.com/deploy/torchpipe-docs/-/tree/master/website/docs/faq/onnx.mdx",tags:[],version:"current",lastUpdatedBy:"zhangshiyang",lastUpdatedAt:1691479968,formattedLastUpdatedAt:"Aug 8, 2023",frontMatter:{id:"onnx",title:"\u5982\u4f55\u5c06\u8f6c\u6362\u6a21\u578b\u5230onnx",type:"explainer"},sidebar:"main",previous:{title:"FAQ",permalink:"/docs/faq"},next:{title:"\u5982\u4f55\u5904\u7406\u8bad\u7ec3\u63a8\u7406\u7684\u4e00\u81f4\u6027",permalink:"/docs/faq/consistency"}},l={},s=[{value:"torch\u8f6connx",id:"torch\u8f6connx",level:2},{value:"\u8f6c\u6362\u5931\u8d25\u8bf4\u660e",id:"\u8f6c\u6362\u5931\u8d25\u8bf4\u660e",level:3},{value:"onnx \u76f8\u5173\u5de5\u5177",id:"onnx-\u76f8\u5173\u5de5\u5177",level:2},{value:"onnx-simplify",id:"onnx-smi",level:3},{value:"netron",id:"netron",level:3},{value:"ONNX GraphSurgeon",id:"onnx-graphsurgeon",level:3},{value:"Polygraphy",id:"polygraphy",level:3},{value:"\u53c2\u8003\u8fde\u63a5",id:"\u53c2\u8003\u8fde\u63a5",level:2}],m={toc:s},u="wrapper";function x(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"\u968f\u7740 NVIDIA \u5c06\u91cd\u5fc3\u8f6c\u79fb\u5230 ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/pytorch/TensorRT"},(0,r.kt)("inlineCode",{parentName:"a"},"TorchTensorrt")),", ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/NVIDIA-AI-IOT/torch2trt"},(0,r.kt)("inlineCode",{parentName:"a"},"torch2trt"))," \u5df2\u7ecf\u505c\u6b62\u5927\u89c4\u6a21\u7ef4\u62a4\u3002tensorrt\u5b98\u65b9\u5c06\u5bf9onnx\u7684\u652f\u6301\u63a8\u5230\u4e86\u6700\u9ad8\u7a0b\u5ea6\u3002\u5728\u6211\u4eec\u7684\u6240\u6709\u5df2\u77e5\u5b9e\u8df5\u4e2d\uff0c\u901a\u8fc7\u9759\u6001onnx\u7ec4\u5408, \u52a8\u6001onnx\uff0c\u9884\u751f\u6210tensorrt\u6a21\u578b\u7b49\u9014\u5f84\uff0ctorchpipe\u80fd\u5b8c\u6574\u66ff\u4ee3 ",(0,r.kt)("inlineCode",{parentName:"p"},"torch2trt"),".")),(0,r.kt)("h2",{id:"torch\u8f6connx"},"torch\u8f6connx"),(0,r.kt)("p",null,"\u6846\u67b6\u4f18\u5148\u652f\u6301\u52a8\u6001 ",(0,r.kt)("inlineCode",{parentName:"p"},"batch")," \u6216\u8005 ",(0,r.kt)("inlineCode",{parentName:"p"},"batchsize==1")," \u7684\u9759\u6001 ",(0,r.kt)("inlineCode",{parentName:"p"},"batch"),"\u3002\u5b9e\u9645\u4e2d\uff0c\u6709\u4e9b\u6a21\u578b\u65e0\u6cd5\u8f6c\u4e3a\u52a8\u6001\u5c3a\u5ea6\uff0c\u6216\u8005\u6bd4\u8f83\u5bb9\u6613\u51fa\u9519\uff0c\n\u6211\u4eec\u4e5f\u652f\u6301",(0,r.kt)("a",{parentName:"p",href:"../Intra-node/schedule#single_node_combine"},(0,r.kt)("strong",{parentName:"a"},"\u540c\u65f6\u52a0\u8f7d\u591a\u4e2a\u4e0d\u540c\u9759\u6001batchsize\u7684\u6a21\u578b")),"\uff0c\u53bb\u6a21\u62df\u52a8\u6001\u5c3a\u5ea6\u3002\u4ee5\u4e0b\u8bf4\u660e\u4e3b\u8981\u9488\u5bf9\u5bfc\u51fa\u52a8\u6001 batchsize \u6a21\u578b\u3002"),(0,r.kt)("admonition",{title:"\u52a8\u6001batch\u7684\u5bfc\u51fa",type:"caution"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"\u4ee5\u4e0b\u64cd\u4f5c\u5bfc\u81f4\u52a8\u6001batch\u4e0d\u53ef\u7528\uff1a ",(0,r.kt)("inlineCode",{parentName:"li"},"x.view(int(x.size(0)), -1)"),". \u9700\u8981\u68c0\u67e5\u6a21\u578b\u6587\u4ef6\u4e2d\u662f\u5426\u5b58\u5728\u5c06batch\u7ef4\u5ea6\u5199\u6b7b\u7684\u60c5\u51b5\uff0c\u6bd4\u5982\uff1ax.view(int(x.size(0)), -1, 1, 1)\uff0cx.reshape(int(x.size(0)), -1, 1, 1)\u7b49\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8f6c\u6362onnx\u540e\u52a8\u6001batch\u51fa\u73b0\u95ee\u9898\u3002\u6ce8\u610f\uff0c\u5728Transformer-like\u7684\u7f51\u7edc\u4e2d\uff0cbatch\u7ef4\u5ea6\u4e0d\u4e00\u5b9a\u5728\u7b2c0\u7ef4\u5ea6\u3002"),(0,r.kt)("li",{parentName:"ul"},"batch\u7ef4\u5ea6\u6307\u5b9a\u4e3a\u52a8\u6001\u5927\u5c0f\u65f6\uff0c\u4f4e\u7248\u672ctensorrt\u5bf9\u6b64\u5904\u7406\u80fd\u529b\u5f31\u4e00\u4e9b\uff0c\u5197\u4f59\u7b97\u5b50\u591a\u4e00\u4e9b\u3002\u6bd4\u5982\u5bf9\u4e8e ",(0,r.kt)("inlineCode",{parentName:"li"},"x.view(x.size(0), -1)"),"\uff0c\u4f1a\u5728onnx\u4e2d\u5f15\u5165Gather\u7b49\u7b97\u5b50\u6765\u8ba1\u7b97x\u7684\u7b2c\u4e00\u4e2a\u7ef4\u5ea6\u3002\u53ef\u4fee\u6539\u4e3a ",(0,r.kt)("inlineCode",{parentName:"li"},"x = x.view(-1, int(x.size(1)*x.size(2)*x.size(3)))")," \u6216\u8005 ",(0,r.kt)("inlineCode",{parentName:"li"},"x = torch.flatten(x, 1)"),"\u3002\u6b64\u9879\u975e\u5fc5\u9700\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e\u90e8\u5206\u6a21\u578b\uff08tensorrt8.5.1, lstm \u548c transformer\uff09\uff0cbatch\u7ef4\u5ea6\u548c\u975ebatch\u7ef4\u5ea6\u540c\u65f6\u52a8\u6001\u65f6\uff0c\u53ef\u80fd\u6d88\u8017\u66f4\u591a\u8d44\u6e90 \uff1a"),(0,r.kt)("li",{parentName:"ul"},"\u5bf9\u4e8elayerNorm\u5c42\u4ee5\u53ca\u52a8\u6001batch\u7684Transformer-like\u7684\u7f51\u7edc\uff0c\u63a8\u8350\u4f7f\u7528opset>=17, tensorrt>=8.6.1")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# batch\u548c\u975ebatch\u540c\u65f6\u52a8\u6001\uff0c\u9700\u89819ms\uff08\u63a8\u7406\u8f93\u5165\u5927\u5c0f\u4e3aoptShapes=input:1x1000x80,mask:1x1x1000\uff09:\n/opt/tensorrt/bin/trtexec --onnx=test_fp32.onnx --shapes=input:1x1000x80,mask:1x1x1000 --workspace=64000 \\\n    --minShapes=input:1x20x80,mask:1x1x20 \\\n    --optShapes=input:1x1000x80,mask:1x1x1000 \\\n    --maxShapes=input:4x2000x80,mask:4x1x2000 \n    \n\n# \u56fa\u5b9abatchsize==1\uff0c\u53ea\u9700\u89814.6ms\uff1a\n/opt/tensorrt/bin/trtexec --onnx=test_fp32.onnx --shapes=input:1x1000x80,mask:1x1x1000 --workspace=64000 \\\n    --minShapes=input:1x20x80,mask:1x1x20 \\\n    --optShapes=input:1x1000x80,mask:1x1x1000 \\\n    --maxShapes=input:1x2000x80,mask:1x1x2000 \n")),(0,r.kt)("p",{parentName:"admonition"},"\u6b64\u65f6\u63a8\u8350",(0,r.kt)("strong",{parentName:"p"},"\u53ea\u5c06\u5176\u4e2d\u4e00\u4e2a\u7ef4\u5ea6\u79bb\u6563\u5316"),"\u3002")),(0,r.kt)("admonition",{title:"\u6700\u4f73\u5b9e\u8df5",type:"tip"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\uff0c\u4fdd\u6301batch\u7ef4\u5ea6\u5728\u7b2c0\u7ef4\u5ea6\uff0c\u957f\u5ea6\u4e3a\u9ed8\u8ba4\u72b6\u6001\uff08\u4e5f\u5c31\u662f-1\uff09\uff0c\u4ee5\u4fbf\u53bb\u9664\u5197\u4f59\u7b97\u5b50\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u4f7f\u7528onnx-simplify\u8fdb\u884c\u4f18\u5316"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/NVIDIA/TensorRT/issues/1166#issuecomment-815551064"},"\u66f4\u5c0f\u7684\u4f18\u5316\u8303\u56f4\u901a\u5e38\u610f\u5473\u7740\u66f4\u5feb\u7684\u901f\u5ea6\u548c\u6d88\u8017\u66f4\u5c11\u7684\u8d44\u6e90")))),(0,r.kt)("p",null,"\u4fee\u6539\u5b8c\u7f51\u7edc\u540e\uff0c\u53ef\u4ee5\u5229\u7528\u4e0b\u9762\u4ee3\u7801\uff0c\u5c06pytorch\u6a21\u578b\u8f6c\u6362\u4e3aonnx\u6a21\u578b\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'x = torch.randn(1,*input_shape).cuda()\nout_size = 1\nout={"input":{0:"batch_size"}}\nfor i in range(out_size):\n    out[f"output_{i}"] = {0:"batch_size"}\n\ntorch_model.cuda().eval()\ntorch.onnx.export(torch_model,\n                    x,\n                    onnx_save_path,\n                    opset_version=17,\n                    do_constant_folding=True,   \n                    input_names=["input"],      # \u8f93\u5165\u540d\n                    output_names=[f"output_{i}" for i in range(out_size)],  # \u8f93\u51fa\u540d\n                    dynamic_axes=out)\n\nimport onnx\nfrom onnxsim import onnx_simplifier\n\nonnx_model = onnx.load(onnx_save_path)\nonnx_model = onnx.shape_inference.infer_shapes(onnx_model)\nmodel_simp, check = onnx_simplifier.simplify(onnx_model, check_n = 0)\nonnx.save(model_simp, onnx_save_path)\n')),(0,r.kt)("h3",{id:"\u8f6c\u6362\u5931\u8d25\u8bf4\u660e"},"\u8f6c\u6362\u5931\u8d25\u8bf4\u660e"),(0,r.kt)("p",null,"torch\u8f6connx\u7ecf\u5e38\u9047\u5230\u8f6c\u6362\u5931\u8d25\u7684\u60c5\u51b5\u3002\u53ef\u91c7\u53d6\u7684\u65b9\u6cd5\u6709\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u52a8\u6001\u7ef4\u5ea6\u4fdd\u6301\u52a8\u6001\uff0c  \u6bd4\u5982\u5bf9\u4e8eyolox\uff1a")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"x = x.view(int(x.size(0)), -1, 1, 1)\n# \u6539\u4e3a\nx = x.flatten(1).unsqueeze(2).unsqueeze(2)\n\nx = x.view(int(x.size(0)), -1)\n# \u6539\u4e3a\nx = x.view(-1, int(x.size(1)*x.size(2)*x.size(3)))\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"bool\u503c\u6539\u4e3afloat:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"tgt_padding_mask = (tgt_in == self.eos_id)\n# \u6539\u4e3a\ntgt_padding_mask = (tgt_in == self.eos_id).float()\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u91c7\u7528",(0,r.kt)("a",{parentName:"li",href:"#onnx-smi"},"onnx-simplify"),"\u7b80\u5316")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u7248\u672c\u539f\u56e0, \u5c1d\u8bd5\u4e0d\u540c\u7248\u672c\uff1a",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5c3d\u53ef\u80fd\u4f7f\u7528\u6700\u65b0\u7248\uff0c\u6bd4\u5982\u91c7\u7528 onnx opset >= 14 \u548c tensorrt >= 8.2"),(0,r.kt)("li",{parentName:"ul"},"\u5bf9\u4e8etensorrt7\uff0c\u63a8\u8350onnx\u7248\u672c1.9.0, onnx opset = 11\n"))),(0,r.kt)("li",{parentName:"ul"},"\u5c1d\u8bd5\u4f7f\u7528trtexec\u8fdb\u884c\u6a21\u578b\u8f6c\u6362\uff1a")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"    \n/opt/tensorrt/bin/trtexec --onnx=folded.onnx \n--workspace=64000 \\\n--minShapes=input:1x20x80,mask:1x1x20 \\\n--optShapes=input:1x1000x80,mask:1x1x1000 \\\n--maxShapes=input:1x2000x80,mask:1x1x2000 \\\n--saveEngine=test_fp32.trt\n")),(0,r.kt)("h2",{id:"onnx-\u76f8\u5173\u5de5\u5177"},"onnx \u76f8\u5173\u5de5\u5177"),(0,r.kt)("h3",{id:"onnx-smi"},(0,r.kt)("a",{parentName:"h3",href:"https://github.com/daquexian/onnx-simplifier"},"onnx-simplify")),(0,r.kt)("p",null,"\u7b80\u5316\u6a21\u578b\u7ed3\u6784\u7684\u5de5\u5177"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"pip install onnx onnxsim\nonnxsim input.onnx output.onnx\n")),(0,r.kt)("h3",{id:"netron"},(0,r.kt)("a",{parentName:"h3",href:"https://github.com/lutzroeder/netron"},"netron")),(0,r.kt)("p",null,"\u7528\u4e8e\u53ef\u89c6\u5316onnx\u6a21\u578b\u7684\u5de5\u5177\u3002"),(0,r.kt)("p",null,"\u8fd0\u884c pip install netron \u548c netron ","[FILE]"," \u6216\u8005 netron.start('","[FILE]","')."),(0,r.kt)("h3",{id:"onnx-graphsurgeon"},(0,r.kt)("a",{parentName:"h3",href:"https://github.com/NVIDIA/TensorRT/tree/master/tools/onnx-graphsurgeon"},"ONNX GraphSurgeon")),(0,r.kt)("p",null,"ONNX GraphSurgeon \u662ftensorrt\u5b98\u65b9\u53d1\u5e03\u7684\u4e00\u6b3e\u7528\u4e8e\u4fee\u6539onnx\u7ed3\u6784\u7684\u5de5\u5177\u3002"),(0,r.kt)("h3",{id:"polygraphy"},(0,r.kt)("a",{parentName:"h3",href:"https://github.com/NVIDIA/TensorRT/tree/main/tools/Polygraphy"},"Polygraphy")),(0,r.kt)("p",null,"nvidia\u5b98\u65b9\u7528\u4e8e\u6d4b\u8bd5tensorrt\u6216\u8005onnx\u7684\u5de5\u5177\u3002\u63d0\u4f9b\u6a21\u578b\u8f6c\u6362\u529f\u80fd\uff0c\u5bf9\u4e8efp16\u7cbe\u5ea6\u635f\u5931\u53ef\u8fdb\u884c\u8c03\u8bd5\uff0c\u6307\u5b9a\u5c42\u4e0d\u4f7f\u7528fp16."),(0,r.kt)("h2",{id:"\u53c2\u8003\u8fde\u63a5"},"\u53c2\u8003\u8fde\u63a5"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://zhuanlan.zhihu.com/p/498425043"},"PyTorch \u8f6c ONNX \u8be6\u89e3"),"\n",(0,r.kt)("a",{parentName:"p",href:"https://zhuanlan.zhihu.com/p/516920606"},"ONNX \u6a21\u578b\u7684\u4fee\u6539\u4e0e\u8c03\u8bd5"),"\n",(0,r.kt)("a",{parentName:"p",href:"https://www.bilibili.com/video/BV1jj411Z7wG/?spm_id_from=333.999.0.0&vd_source=c31de98543aa977b5899e24bdd5d8f89"},"TensorRT \u6559\u7a0b | \u57fa\u4e8e 8.6.1 \u7248\u672c"),"\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/NVIDIA/TensorRT/tree/release/8.6/quickstart/quantization_tutorial"},"quantization tutorial")))}x.isMDXComponent=!0}}]);